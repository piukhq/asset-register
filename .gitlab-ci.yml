stages:
  - tests
  - build
  - deploy

black:
  stage: tests
  image: python:3.8
  script:
    - pip3 install poetry
    - poetry install
    - poetry run black -l 120 -t py38 --check .

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker build --build-arg=COMMIT="$CI_COMMIT_SHORT_SHA" --pull -t "$CI_REGISTRY/asset-register:latest" .

    - docker run --rm -v /tmp:/tmp -v /var/run/docker.sock:/var/run/docker.sock registry.aquasec.com/scanner:5.0 scan --registry "Docker Hub" mongo:latest --host https://aqua.uksouth.bink.sh/ --user tcain@bink.com --password jSjvP7Ge2zSk9i08ktf3 --show-negligible --htmlfile out.html --jsonfile out.json > /dev/null
    - cp /tmp/out.html /tmp/out.json .





    - docker push "$CI_REGISTRY/asset-register:latest"
  only:
    - master
  artifacts:
    paths:
    - out.json
    - out.html

tag:
  stage: deploy
  image: binkops.azurecr.io/tagbot:latest
  script:
    - tagbot --username "$CI_REGISTRY_USER" --password "$CI_REGISTRY_PASSWORD" --source "$CI_REGISTRY/asset-register:latest" --tag "$CI_COMMIT_SHORT_SHA"
  only:
    - master
